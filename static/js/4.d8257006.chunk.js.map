{"version":3,"sources":["redux/shop/selector-shop.jsx","components/with-spinner/with-spinner.jsx","components/collection-item/style-collection-item.jsx","components/collection-item/collection-item.jsx","pages/collections/style-collections.jsx","pages/collections/collections.js","pages/collections/container-collection.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","WithSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","connect","dispatch","addItem","item","name","price","className","onClick","inverted","CollectionPageContainer","CollectionTitle","h2","CollectionItemsContainer","ownProps","collection","match","params","collectionId","history","linkUrl","title","items","push","url","id","mapStateToProps","createStructuredSelector","compose","CollectionPage"],"mappings":"2GACA,kHAEMA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC/B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKG,eAGFC,EAA8BF,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAG,OAAIL,EAAYK,MAAQ,MAG7DC,EAAmB,SAAAC,GAAkB,OAChDR,YACE,CAACD,IACD,SAAAE,GAAW,OAAKA,EAAcA,EAAYO,GAAsB,SAGvDC,EAA6BT,YACxC,CAACJ,IACC,SAAAE,GAAI,OAAIA,EAAKY,cAIwBV,YACvC,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKG,gB,oECtBFU,IAJK,SAAAC,GAAgB,OAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BACxE,OAAOD,EAAY,kBAAC,IAAD,MAAc,kBAACD,EAAqBE,M,k+CCDlD,IAAMC,EAA0BC,IAAOC,IAAV,KAkCvBC,EAAYF,YAAOG,IAAPH,CAAH,KAeTI,EAAkBJ,IAAOC,IAAV,KAMN,gBAAGI,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4BN,IAAOC,IAAV,KAQzBM,EAAgBP,IAAOQ,KAAV,KAKbC,EAAiBT,IAAOQ,KAAV,KC1CZE,gBACb,MALyB,SAAAC,GAAQ,MAAK,CACtCC,QAAS,SAAAC,GAAI,OAAIF,EAASC,YAAQC,QAGrBH,EArBc,SAAC,GAAmB,IAAlBG,EAAiB,EAAjBA,KAAKD,EAAY,EAAZA,QACxBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOV,EAAaQ,EAAbR,SACrB,OACI,kBAACN,EAAD,KACA,kBAACK,EAAD,CAAiBY,UAAU,QAAQX,SAAUA,IAC7C,kBAACC,EAAD,KACI,kBAACC,EAAD,KAAgBO,GAChB,kBAACL,EAAD,KAAiBM,IAEjB,kBAACb,EAAD,CAAWe,QAAS,kBAAML,EAAQC,IAAOK,UAAQ,GAAjD,oB,gpBClBL,IAAMC,EAA0BnB,IAAOC,IAAV,KAKvBmB,EAAkBpB,IAAOqB,GAAV,KAKfC,EAA2BtB,IAAOC,IAAV,KCmBtBS,eALS,SAAC7B,EAAO0C,GAAR,MAAsB,CAC1CC,WAAYjC,YAAiBgC,EAASE,MAAMC,OAAOC,aAAvCpC,CAAqDV,MAItD6B,EAtBS,SAAC,GAAwC,IAAvCc,EAAsC,EAAtCA,WAAWC,EAA2B,EAA3BA,MAAMG,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,QAC5CC,EAAeN,EAAfM,MAAMC,EAASP,EAATO,MACb,OAEI,kBAACZ,EAAD,KACA,kBAACC,EAAD,CAAiBH,QAAY,kBAAMW,EAAQI,KAAR,UAAgBP,EAAMQ,KAAtB,OAA4BJ,MAAaC,GAC5E,kBAACR,EAAD,KAEIS,EAAM1C,KAAI,SAAAwB,GAAI,OACV,kBAAC,IAAD,CAAgBvB,IAAKuB,EAAKqB,GAAIrB,KAAMA,YCJ1CsB,EAAkBC,YAAyB,CAC7CvC,UAAWJ,MAGT0B,EAA0BkB,YAC9B3B,YAAQyB,GACRxC,IAF8B0C,CAG9BC,GAEanB","file":"static/js/4.d8257006.chunk.js","sourcesContent":["\nimport { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n    shop => shop.isFetching\n);\n\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections\n);\n\n/** !! means if no object r empty obj returns false */","import React from 'react';\n\nimport Spinner from '../spinner/spinner';\n\nconst WithSpinner = WrappedComponent => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n\n// import React from 'react';\n\n// import { SpinnerContainer, SpinnerOverlay } from './style-with-spinner';\n\n\n\n// /** it is a HOC load the page until get all data */\n// const WithSpinner = WrappedComponent => {\n//   const Spinner = ({ isLoading, ...otherProps }) => {\n//     return isLoading ? (\n//       <SpinnerOverlay>\n//         <SpinnerContainer />\n//       </SpinnerOverlay>\n//     ) : (\n//       <WrappedComponent {...otherProps} />\n//     );\n//   };\n//   return Spinner;\n// };\n\n// export default WithSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../button/button';\n\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    width: 40vw;\n\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 800px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`;\n\n\n// export const CollectionItemContainer = styled.div`\n//   width: 22vw;\n//   display: flex;\n//   flex-direction: column;\n//   height: 350px;\n//   align-items: center;\n//   position: relative;\n\n//   &:hover {\n//     .image {\n//       opacity: 0.8;\n//     }\n\n//     button {\n//       opacity: 0.85;\n//       display: flex;\n//     }\n//   }\n// `;\n\n// export const AddButton = styled(CustomButton)`\n  /* width: 80%;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n`;\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nexport const PriceContainer = styled.span`\n  width: 10%;\n  text-align: right;\n`; */\n\n\n","\nimport React from 'react';\nimport {addItem} from './../../redux/cart/act-cart';\nimport {connect} from 'react-redux';\n\nimport { CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n  PriceContainer} from './style-collection-item';\n\nexport const CollectionItem =({item,addItem}) =>{\n    const { name, price, imageUrl } = item;\n    return(\n        <CollectionItemContainer>\n        <BackgroundImage className='image' imageUrl={imageUrl}/> \n        <CollectionFooterContainer>\n            <NameContainer>{name}</NameContainer>\n            <PriceContainer>{price}</PriceContainer>\n            </CollectionFooterContainer>\n            <AddButton onClick={() => addItem(item)} inverted>\n            Add to cart\n          </AddButton>\n        </CollectionItemContainer>\n    )\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CollectionItem);\n\n\n\n\n\n\n","\nimport styled from 'styled-components';\n\nexport const CollectionPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const CollectionTitle = styled.h2`\n  font-size: 38px;\n  margin: 0 auto 30px;\n`;\n\nexport const CollectionItemsContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 10px;\n\n  & > div {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n\n\n\n\n// .collection-page {\n//     display: flex;\n//     flex-direction: column;\n  \n//     .title {\n//       font-size: 38px;\n//       margin: 0 auto 30px;\n//     }\n  \n//     .items {\n//       display: grid;\n//       grid-template-columns: 1fr 1fr 1fr 1fr;\n//       grid-gap: 10px;\n  \n//       & .collection-item {\n//         margin-bottom: 30px;\n//       }\n//     }\n//   }\n  ","import React from 'react';\nimport CollectionItem from '../../components/collection-item/collection-item.jsx'\nimport {connect} from 'react-redux'\n\nimport { selectCollection } from '../../redux/shop/selector-shop.jsx';\n\nimport {CollectionPageContainer,\n    CollectionTitle,\n    CollectionItemsContainer} from './style-collections';\n\nconst CollectionsPage = ({collection,match,history,linkUrl}) => {\nconst {title,items} = collection;\nreturn(\n\n    <CollectionPageContainer>\n    <CollectionTitle onClick = { () => history.push(`${match.url}${linkUrl}`)}>{title}</CollectionTitle>\n    <CollectionItemsContainer>\n    {\n        items.map(item => (\n            <CollectionItem key={item.id} item={item}/>\n        ))\n    }\n    </CollectionItemsContainer>\n    </CollectionPageContainer>\n)\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    collection: selectCollection(ownProps.match.params.collectionId)(state)\n  });\n\n\nexport default connect(mapStateToProps)(CollectionsPage);","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollectionFetching} from '../../redux/shop/selector-shop';\nimport WithSpinner from '../../components/with-spinner/with-spinner';\nimport CollectionPage from './collections';\n\n\n/** should pass this one only...but it is not working so passing below one */\n// const mapStateToProps = createStructuredSelector({\n//   isLoading: state => !selectIsCollectionsLoaded(state)\n// });\n\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: selectIsCollectionFetching\n  });\n\nconst CollectionPageContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;"],"sourceRoot":""}